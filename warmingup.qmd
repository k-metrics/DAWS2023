> **※本ページの内容はテキストの第４章に相当します**

```{r setup, include=FALSE}
source("./R/setup.R")
```


# 始める前に
　データ分析を始める前に使用するデータについて把握しておきましょう。データは[テキスト特設サイト](https://bluebacks.kodansha.co.jp/books/9784065318164/appendix/)からダウンロードしておきます。

:::{.callout-note collapse="true"}
## テキスト特設サイト
[https://bluebacks.kodansha.co.jp/books/9784065318164/appendix/](https://bluebacks.kodansha.co.jp/books/9784065318164/appendix/)にあるデータはWindows用とmacOS用がありますので、利用環境に合わせてダウンロードしてください。
:::


## 使用するデータの内容
　テキストでは使用するデータのファイル名が「外来患者ストレス.RData」となっていますが、テキストの説明と異なる順番で変数が並んでいたり、Rcmdrのバグに引っかかったりするので第5章で使う最小限のデータに限定したデータセット（`外来患者ストレス改.RData`（`PatientStressKai`））を用意しました。

```{r, echo=FALSE, eval=FALSE}
load("./SampleFiles/外来患者ストレス.RData")
PatientStressKai <- PatientStress %>% 
  dplyr::select(`性別`,
                `年齢`,
                `ストレッサー得点`,
                `日常苛立ちごと`,
                `健康統制感`,
                `ストレス反応得点`,
                `ノンコンプライアンス行動数`,
                `年齢区分`)
PatientStressKai
save(PatientStressKai, file = "./SampleFiles/外来患者ストレス改.RData")

load("./SampleFiles/外来患者ストレス(元データ).RData")
PatientStressOrg <- PatientStress
save(PatientStressOrg, file = "./SampleFiles/外来患者ストレス改(元データ).RData")

# PatientStressNew <- PatientStress %>% 
#   dplyr::select(`性別`,
#                 `年齢`,
#                 `年齢区分`,
#                 `年齢コード`,
#                 `年齢コード3`,
#                 `ストレッサー得点`,
#                 `日常苛立ちごと`,
#                 `日常苛立ち`,
#                 `健康統制感`,
#                 `ストレス反応得点`,
#                 `ストレス反応`,
#                 `ノンコンプライアンス行動数`,
#                 `ノンコンプライアンス`)
# PatientStressNew
# save(PatientStressNew, file = "./SampleFiles/外来患者ストレス新.RData")
```

```{r, echo=FALSE}
load("./SampleFiles/外来患者ストレス改.RData")
PatientStressKai %>% df_print()
```

　各変数の詳細についてはテキストで確認してください。

:::{.callout-caution collapse="true"}
## Rcmdrのバグ
Rcmdr 2.8.0にはアクティブデータセット内に10を超える変数がある場合、要約統計量が計算できずフリーズするというバグがあります。
:::

<!-- ### 元データ -->
<!-- 　調査結果（外来患者ストレス(元データ).RData）をテキストP47からの紹介順に並べると下記のようになります。 -->
　
```{r, echo=FALSE, eval=FALSE}
tibble::tribble(
  ~`変数名`,                    ~`尺度`,　~`説明`, 
  "性別",                       "名義", "生物学的性別（男:1,女:2）",
  "年齢",                       "比例", "調査時の年齢",
  "ストレッサー得点",           "間隔", "回答を得点(数値)化したもの",
  "日常苛立ちごと",             "間隔", "回答を得点(数値)化したもの",
  "健康統制感",                 "順序", "回答を得点(数値)化したもの",
  "ストレス反応得点",           "順序", "測定結果を得点(数値)化したもの",
  "ノンコンプライアンス行動数", "間隔", "回答をゼロイチ化したものの合計",
) %>% 
  df_print()
```

<!-- ### カテゴリカル変数部 -->
<!-- 　元データを任意の水準でカテゴライズ（因子化）してものをテキストP47からの紹介順に並べると各のようになります。 -->

```{r, echo=FALSE, eval=FALSE}
tibble::tribble(
  ~`変数名`,                    ~`尺度`,　~`説明`, 
  "年齢区分",                   "順序", "年齢を4水準でカテゴライズ",
  "年齢コード",                 "順序", "上記をコード化",
  "年齢コード3",                "順序", "年齢を3水準でカテゴライズ",
  "日常苛立ち",                 "順序", "得点を4水準でカテゴライズ",
  "ストレス反応",               "順序", "得点の平方根変換",
  "ノンコンプライアンス",       "名義", "得点を2水準でカテゴライズ",
) %>% 
  df_print()
```

```{r, inclide=FALSE, echo=FALSE, eval=FALSE}
tibble::tribble(
  ~`変数名`,                    ~`尺度`,　~`説明`, 
  "性別",                       "名義", "生物学的性別（男:1,女:2）",
  "年齢",                       "比例", "調査時の年齢",
  "年齢区分",                   "順序", "年齢を文字カテゴリ化したもの",
  "年齢コード",                 "順序", "年齢を数字カテゴリ化したもの",
  "年齢コード3",                "順序", "年齢を数字カテゴリ化したもの",
  "ストレッサー得点",           "間隔", "回答を得点(数値)化したもの",
  "日常苛立ちごと",             "間隔", "回答を得点(数値)化したもの",
  "日常苛立ち",                 "順序", "上記を数字カテゴリ化したもの",
  "健康統制感",                 "順序", "回答を得点(数値)化したもの",
  "ストレス反応得点",           "順序", "測定結果を得点(数値)化したもの",
  "ストレス反応",               "順序", "上記の平方根変換したもの",
  "ノンコンプライアンス行動数", "間隔", "回答をゼロイチ化したものの合計",
  "ノンコンプライアンス",       "名義", "上記を文字カテゴリ化したもの"
) %>% 
  df_print()
```


## 変数の種類

　テキストでは変数を「数値をとる場合」と「非数値をとる場合」に二分していますが、一般的には「量的変数」と「質的変数」という名称が使われますが、このふたつの変数を更に分類した[尺度](https://bellcurve.jp/statistics/course/1562.html)を用いるのが一般的です。

変数区分 | 尺度     | 意味
---------|----------|---------------------------------------------------
質的変数 | 名義尺度 | 値が同じか否かという意味しかない
質的変数 | 順序尺度 | 順序や大小には意味があるが間隔には意味がない
量的変数 | 間隔尺度 | 0が相対的な意味を持ち等間隔であり間隔に意味がある
量的変数 | 比例尺度 | 0が絶対的な意味を持ち間隔と比率に意味があるもの

<!-- ### 名義尺度 -->
<!-- 　名義尺度は名前の通り他と区分するための変数で、性別や血液型、背番号などが該当します。背番号は数字ですが、一般的には数字の大小に意味を持たないので名義尺度と捉えることができます。 -->

<!-- ### 順序尺度 -->
<!-- 　順序尺度は名前の通り順序が意味を持つ変数で、順位（ランキング）や階級などが該当します。一般的に順位などは数字で表すので量的変数のように思えます、数値を加減算しても意味がないものは順序尺度と考えます。 -->

<!-- ### 間隔尺度 -->
<!-- 　間隔尺度は名前の通り間隔が意味を持つ変数で、温度やテストの点数などが該当します。加減算した場合には意味を持ち、乗除算しても意味がないものは間隔尺度です。 -->
<!-- 　例えば、温度は15度から15度上がれば30度ですが、15度が2倍になったら30度とは言えないので、間隔尺度に該当します。 -->

<!-- ### 比例尺度（比尺度） -->


## データ解析の流れ

1. 一変数単位での要約統計量と分布の確認
1. 二変数単位での相関の確認
1. 二変数以上の変数間の関係を表すモデルの作成



---
